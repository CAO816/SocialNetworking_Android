// Generated by view binder compiler. Do not edit!
package HCMUTE.SocialMedia.databinding;

import HCMUTE.SocialMedia.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVerifyNewAccountBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnContinue;

  @NonNull
  public final EditText etToken1;

  @NonNull
  public final EditText etToken2;

  @NonNull
  public final EditText etToken3;

  @NonNull
  public final EditText etToken4;

  @NonNull
  public final EditText etToken5;

  @NonNull
  public final EditText etToken6;

  @NonNull
  public final TextView tvNotify;

  private ActivityVerifyNewAccountBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnContinue, @NonNull EditText etToken1, @NonNull EditText etToken2,
      @NonNull EditText etToken3, @NonNull EditText etToken4, @NonNull EditText etToken5,
      @NonNull EditText etToken6, @NonNull TextView tvNotify) {
    this.rootView = rootView;
    this.btnContinue = btnContinue;
    this.etToken1 = etToken1;
    this.etToken2 = etToken2;
    this.etToken3 = etToken3;
    this.etToken4 = etToken4;
    this.etToken5 = etToken5;
    this.etToken6 = etToken6;
    this.tvNotify = tvNotify;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVerifyNewAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVerifyNewAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_verify_new_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVerifyNewAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnContinue;
      Button btnContinue = ViewBindings.findChildViewById(rootView, id);
      if (btnContinue == null) {
        break missingId;
      }

      id = R.id.etToken1;
      EditText etToken1 = ViewBindings.findChildViewById(rootView, id);
      if (etToken1 == null) {
        break missingId;
      }

      id = R.id.etToken2;
      EditText etToken2 = ViewBindings.findChildViewById(rootView, id);
      if (etToken2 == null) {
        break missingId;
      }

      id = R.id.etToken3;
      EditText etToken3 = ViewBindings.findChildViewById(rootView, id);
      if (etToken3 == null) {
        break missingId;
      }

      id = R.id.etToken4;
      EditText etToken4 = ViewBindings.findChildViewById(rootView, id);
      if (etToken4 == null) {
        break missingId;
      }

      id = R.id.etToken5;
      EditText etToken5 = ViewBindings.findChildViewById(rootView, id);
      if (etToken5 == null) {
        break missingId;
      }

      id = R.id.etToken6;
      EditText etToken6 = ViewBindings.findChildViewById(rootView, id);
      if (etToken6 == null) {
        break missingId;
      }

      id = R.id.tvNotify;
      TextView tvNotify = ViewBindings.findChildViewById(rootView, id);
      if (tvNotify == null) {
        break missingId;
      }

      return new ActivityVerifyNewAccountBinding((LinearLayout) rootView, btnContinue, etToken1,
          etToken2, etToken3, etToken4, etToken5, etToken6, tvNotify);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
