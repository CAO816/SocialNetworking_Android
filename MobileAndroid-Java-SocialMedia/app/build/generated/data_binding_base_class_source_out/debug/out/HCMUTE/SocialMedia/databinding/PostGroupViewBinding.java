// Generated by view binder compiler. Do not edit!
package HCMUTE.SocialMedia.databinding;

import HCMUTE.SocialMedia.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostGroupViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView cvComment;

  @NonNull
  public final CardView cvLike;

  @NonNull
  public final CardView cvShare;

  @NonNull
  public final TextView groupId;

  @NonNull
  public final ImageView ivComment;

  @NonNull
  public final CircleImageView ivGroupAvatar;

  @NonNull
  public final TextView ivGroupName;

  @NonNull
  public final ImageView ivLike;

  @NonNull
  public final ImageView ivMenu;

  @NonNull
  public final ImageView ivMode;

  @NonNull
  public final ImageView ivPostImage;

  @NonNull
  public final ImageView ivShare;

  @NonNull
  public final TextView tvFullName;

  @NonNull
  public final TextView tvPostText;

  @NonNull
  public final TextView tvPostingTimeAt;

  private PostGroupViewBinding(@NonNull RelativeLayout rootView, @NonNull CardView cvComment,
      @NonNull CardView cvLike, @NonNull CardView cvShare, @NonNull TextView groupId,
      @NonNull ImageView ivComment, @NonNull CircleImageView ivGroupAvatar,
      @NonNull TextView ivGroupName, @NonNull ImageView ivLike, @NonNull ImageView ivMenu,
      @NonNull ImageView ivMode, @NonNull ImageView ivPostImage, @NonNull ImageView ivShare,
      @NonNull TextView tvFullName, @NonNull TextView tvPostText,
      @NonNull TextView tvPostingTimeAt) {
    this.rootView = rootView;
    this.cvComment = cvComment;
    this.cvLike = cvLike;
    this.cvShare = cvShare;
    this.groupId = groupId;
    this.ivComment = ivComment;
    this.ivGroupAvatar = ivGroupAvatar;
    this.ivGroupName = ivGroupName;
    this.ivLike = ivLike;
    this.ivMenu = ivMenu;
    this.ivMode = ivMode;
    this.ivPostImage = ivPostImage;
    this.ivShare = ivShare;
    this.tvFullName = tvFullName;
    this.tvPostText = tvPostText;
    this.tvPostingTimeAt = tvPostingTimeAt;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostGroupViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostGroupViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_group_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostGroupViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cvComment;
      CardView cvComment = ViewBindings.findChildViewById(rootView, id);
      if (cvComment == null) {
        break missingId;
      }

      id = R.id.cvLike;
      CardView cvLike = ViewBindings.findChildViewById(rootView, id);
      if (cvLike == null) {
        break missingId;
      }

      id = R.id.cvShare;
      CardView cvShare = ViewBindings.findChildViewById(rootView, id);
      if (cvShare == null) {
        break missingId;
      }

      id = R.id.groupId;
      TextView groupId = ViewBindings.findChildViewById(rootView, id);
      if (groupId == null) {
        break missingId;
      }

      id = R.id.ivComment;
      ImageView ivComment = ViewBindings.findChildViewById(rootView, id);
      if (ivComment == null) {
        break missingId;
      }

      id = R.id.ivGroupAvatar;
      CircleImageView ivGroupAvatar = ViewBindings.findChildViewById(rootView, id);
      if (ivGroupAvatar == null) {
        break missingId;
      }

      id = R.id.ivGroupName;
      TextView ivGroupName = ViewBindings.findChildViewById(rootView, id);
      if (ivGroupName == null) {
        break missingId;
      }

      id = R.id.ivLike;
      ImageView ivLike = ViewBindings.findChildViewById(rootView, id);
      if (ivLike == null) {
        break missingId;
      }

      id = R.id.ivMenu;
      ImageView ivMenu = ViewBindings.findChildViewById(rootView, id);
      if (ivMenu == null) {
        break missingId;
      }

      id = R.id.ivMode;
      ImageView ivMode = ViewBindings.findChildViewById(rootView, id);
      if (ivMode == null) {
        break missingId;
      }

      id = R.id.ivPostImage;
      ImageView ivPostImage = ViewBindings.findChildViewById(rootView, id);
      if (ivPostImage == null) {
        break missingId;
      }

      id = R.id.ivShare;
      ImageView ivShare = ViewBindings.findChildViewById(rootView, id);
      if (ivShare == null) {
        break missingId;
      }

      id = R.id.tvFullName;
      TextView tvFullName = ViewBindings.findChildViewById(rootView, id);
      if (tvFullName == null) {
        break missingId;
      }

      id = R.id.tvPostText;
      TextView tvPostText = ViewBindings.findChildViewById(rootView, id);
      if (tvPostText == null) {
        break missingId;
      }

      id = R.id.tvPostingTimeAt;
      TextView tvPostingTimeAt = ViewBindings.findChildViewById(rootView, id);
      if (tvPostingTimeAt == null) {
        break missingId;
      }

      return new PostGroupViewBinding((RelativeLayout) rootView, cvComment, cvLike, cvShare,
          groupId, ivComment, ivGroupAvatar, ivGroupName, ivLike, ivMenu, ivMode, ivPostImage,
          ivShare, tvFullName, tvPostText, tvPostingTimeAt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
